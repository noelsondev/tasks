// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: camel_case_types, constant_identifier_names, depend_on_referenced_packages, non_constant_identifier_names


import 'dart:convert' as convert show json;
import 'package:orm/configure.dart' as configure;
import 'package:orm/orm.dart' as runtime;
import 'package:orm/dmmf.dart' as dmmf;
import 'package:json_annotation/json_annotation.dart';

export 'package:orm/orm.dart' show Datasource, PrismaNull, PrismaUnion, TransactionIsolationLevel;


part 'prisma_client.g.dart';

//******************************************************************************
// This file was generated by Prisma ORM
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum SortOrder {
  asc,
  desc,
}
enum TaskScalarFieldEnum {
  id,
  title,
  description,
  completed,
  createdAt,
  updatedAt,
  userId,
}
enum UserScalarFieldEnum {
  id,
  username,
  email,
  password,
}


class UserWhereInput implements runtime.JsonSerializable {
    const UserWhereInput(
{
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.username,
    this.email,
    this.password,
    this.tasks,
}
 );


    final List<UserWhereInput>? AND;
  final List<UserWhereInput>? OR;
  final List<UserWhereInput>? NOT;
  final runtime.PrismaUnion<IntFilter, int>? id;
  final runtime.PrismaUnion<StringFilter, String>? username;
  final runtime.PrismaUnion<StringFilter, String>? email;
  final runtime.PrismaUnion<StringFilter, String>? password;
  final TaskListRelationFilter? tasks;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'AND': AND,'OR': OR,'NOT': NOT,'id': id,'username': username,'email': email,'password': password,'tasks': tasks,
  };

}

class UserOrderByWithRelationInput implements runtime.JsonSerializable {
    const UserOrderByWithRelationInput(
{
    this.id,
    this.username,
    this.email,
    this.password,
    this.tasks,
}
 );


    final SortOrder? id;
  final SortOrder? username;
  final SortOrder? email;
  final SortOrder? password;
  final TaskOrderByRelationAggregateInput? tasks;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,'tasks': tasks,
  };

}

class UserWhereUniqueInput implements runtime.JsonSerializable {
    const UserWhereUniqueInput(
{
    this.id,
    this.email,
}
 );


    final int? id;
  final String? email;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'email': email,
  };

}

class UserOrderByWithAggregationInput implements runtime.JsonSerializable {
    const UserOrderByWithAggregationInput(
{
    this.id,
    this.username,
    this.email,
    this.password,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
}
 );


    final SortOrder? id;
  final SortOrder? username;
  final SortOrder? email;
  final SortOrder? password;
  final UserCountOrderByAggregateInput? $count;
  final UserAvgOrderByAggregateInput? $avg;
  final UserMaxOrderByAggregateInput? $max;
  final UserMinOrderByAggregateInput? $min;
  final UserSumOrderByAggregateInput? $sum;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,'_count': $count,'_avg': $avg,'_max': $max,'_min': $min,'_sum': $sum,
  };

}

class UserScalarWhereWithAggregatesInput implements runtime.JsonSerializable {
    const UserScalarWhereWithAggregatesInput(
{
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.username,
    this.email,
    this.password,
}
 );


    final List<UserScalarWhereWithAggregatesInput>? AND;
  final List<UserScalarWhereWithAggregatesInput>? OR;
  final List<UserScalarWhereWithAggregatesInput>? NOT;
  final runtime.PrismaUnion<IntWithAggregatesFilter, int>? id;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? username;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? email;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'AND': AND,'OR': OR,'NOT': NOT,'id': id,'username': username,'email': email,'password': password,
  };

}

class TaskWhereInput implements runtime.JsonSerializable {
    const TaskWhereInput(
{
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.userId,
    this.user,
}
 );


    final List<TaskWhereInput>? AND;
  final List<TaskWhereInput>? OR;
  final List<TaskWhereInput>? NOT;
  final runtime.PrismaUnion<IntFilter, int>? id;
  final runtime.PrismaUnion<StringFilter, String>? title;
  final runtime.PrismaUnion<StringFilter, String>? description;
  final runtime.PrismaUnion<BoolFilter, bool>? completed;
  final runtime.PrismaUnion<DateTimeFilter, DateTime>? createdAt;
  final runtime.PrismaUnion<DateTimeFilter, DateTime>? updatedAt;
  final runtime.PrismaUnion<IntFilter, int>? userId;
  final runtime.PrismaUnion<UserRelationFilter, UserWhereInput>? user;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'AND': AND,'OR': OR,'NOT': NOT,'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,'user': user,
  };

}

class TaskOrderByWithRelationInput implements runtime.JsonSerializable {
    const TaskOrderByWithRelationInput(
{
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.userId,
    this.user,
}
 );


    final SortOrder? id;
  final SortOrder? title;
  final SortOrder? description;
  final SortOrder? completed;
  final SortOrder? createdAt;
  final SortOrder? updatedAt;
  final SortOrder? userId;
  final UserOrderByWithRelationInput? user;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,'user': user,
  };

}

class TaskWhereUniqueInput implements runtime.JsonSerializable {
    const TaskWhereUniqueInput(
{
    this.id,
}
 );


    final int? id;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,
  };

}

class TaskOrderByWithAggregationInput implements runtime.JsonSerializable {
    const TaskOrderByWithAggregationInput(
{
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.userId,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
}
 );


    final SortOrder? id;
  final SortOrder? title;
  final SortOrder? description;
  final SortOrder? completed;
  final SortOrder? createdAt;
  final SortOrder? updatedAt;
  final SortOrder? userId;
  final TaskCountOrderByAggregateInput? $count;
  final TaskAvgOrderByAggregateInput? $avg;
  final TaskMaxOrderByAggregateInput? $max;
  final TaskMinOrderByAggregateInput? $min;
  final TaskSumOrderByAggregateInput? $sum;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,'_count': $count,'_avg': $avg,'_max': $max,'_min': $min,'_sum': $sum,
  };

}

class TaskScalarWhereWithAggregatesInput implements runtime.JsonSerializable {
    const TaskScalarWhereWithAggregatesInput(
{
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.userId,
}
 );


    final List<TaskScalarWhereWithAggregatesInput>? AND;
  final List<TaskScalarWhereWithAggregatesInput>? OR;
  final List<TaskScalarWhereWithAggregatesInput>? NOT;
  final runtime.PrismaUnion<IntWithAggregatesFilter, int>? id;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? title;
  final runtime.PrismaUnion<StringWithAggregatesFilter, String>? description;
  final runtime.PrismaUnion<BoolWithAggregatesFilter, bool>? completed;
  final runtime.PrismaUnion<DateTimeWithAggregatesFilter, DateTime>? createdAt;
  final runtime.PrismaUnion<DateTimeWithAggregatesFilter, DateTime>? updatedAt;
  final runtime.PrismaUnion<IntWithAggregatesFilter, int>? userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'AND': AND,'OR': OR,'NOT': NOT,'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,
  };

}

class UserCreateInput implements runtime.JsonSerializable {
    const UserCreateInput(
{
    required this.username,
    required this.email,
    required this.password,
    this.tasks,
}
 );


    final String username;
  final String email;
  final String password;
  final TaskCreateNestedManyWithoutUserInput? tasks;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'username': username,'email': email,'password': password,'tasks': tasks,
  };

}

class UserUncheckedCreateInput implements runtime.JsonSerializable {
    const UserUncheckedCreateInput(
{
    required this.username, required this.email, required this.password, this.id,
    this.tasks,
}
 );


    final int? id;
  final String username;
  final String email;
  final String password;
  final TaskUncheckedCreateNestedManyWithoutUserInput? tasks;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,'tasks': tasks,
  };

}

class UserUpdateInput implements runtime.JsonSerializable {
    const UserUpdateInput(
{
    this.username,
    this.email,
    this.password,
    this.tasks,
}
 );


    final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? username;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? password;
  final TaskUpdateManyWithoutUserNestedInput? tasks;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'username': username,'email': email,'password': password,'tasks': tasks,
  };

}

class UserUncheckedUpdateInput implements runtime.JsonSerializable {
    const UserUncheckedUpdateInput(
{
    this.id,
    this.username,
    this.email,
    this.password,
    this.tasks,
}
 );


    final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? username;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? password;
  final TaskUncheckedUpdateManyWithoutUserNestedInput? tasks;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,'tasks': tasks,
  };

}

class UserCreateManyInput implements runtime.JsonSerializable {
    const UserCreateManyInput(
{
    required this.username, required this.email, required this.password, this.id,
}
 );


    final int? id;
  final String username;
  final String email;
  final String password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,
  };

}

class UserUpdateManyMutationInput implements runtime.JsonSerializable {
    const UserUpdateManyMutationInput(
{
    this.username,
    this.email,
    this.password,
}
 );


    final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? username;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'username': username,'email': email,'password': password,
  };

}

class UserUncheckedUpdateManyInput implements runtime.JsonSerializable {
    const UserUncheckedUpdateManyInput(
{
    this.id,
    this.username,
    this.email,
    this.password,
}
 );


    final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? username;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,
  };

}

class TaskCreateInput implements runtime.JsonSerializable {
    const TaskCreateInput(
{
    required this.title,
    required this.description,
    required this.user, this.completed,
    this.createdAt,
    this.updatedAt,
}
 );


    final String title;
  final String description;
  final bool? completed;
  final DateTime? createdAt;
  final DateTime? updatedAt;
  final UserCreateNestedOneWithoutTasksInput user;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'user': user,
  };

}

class TaskUncheckedCreateInput implements runtime.JsonSerializable {
    const TaskUncheckedCreateInput(
{
    required this.title, required this.description, required this.userId, this.id,
    this.completed,
    this.createdAt,
    this.updatedAt,
}
 );


    final int? id;
  final String title;
  final String description;
  final bool? completed;
  final DateTime? createdAt;
  final DateTime? updatedAt;
  final int userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,
  };

}

class TaskUpdateInput implements runtime.JsonSerializable {
    const TaskUpdateInput(
{
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.user,
}
 );


    final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? description;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? completed;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? updatedAt;
  final UserUpdateOneRequiredWithoutTasksNestedInput? user;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'user': user,
  };

}

class TaskUncheckedUpdateInput implements runtime.JsonSerializable {
    const TaskUncheckedUpdateInput(
{
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.userId,
}
 );


    final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? description;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? completed;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? updatedAt;
  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,
  };

}

class TaskCreateManyInput implements runtime.JsonSerializable {
    const TaskCreateManyInput(
{
    required this.title, required this.description, required this.userId, this.id,
    this.completed,
    this.createdAt,
    this.updatedAt,
}
 );


    final int? id;
  final String title;
  final String description;
  final bool? completed;
  final DateTime? createdAt;
  final DateTime? updatedAt;
  final int userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,
  };

}

class TaskUpdateManyMutationInput implements runtime.JsonSerializable {
    const TaskUpdateManyMutationInput(
{
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
}
 );


    final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? description;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? completed;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? updatedAt;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,
  };

}

class TaskUncheckedUpdateManyInput implements runtime.JsonSerializable {
    const TaskUncheckedUpdateManyInput(
{
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.userId,
}
 );


    final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? description;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? completed;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? updatedAt;
  final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,
  };

}

class IntFilter implements runtime.JsonSerializable {
    const IntFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
}
 );


    final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntFilter>? not;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'not': not,
  };

}

class StringFilter implements runtime.JsonSerializable {
    const StringFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
}
 );


    final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringFilter>? not;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'contains': contains,'startsWith': startsWith,'endsWith': endsWith,'not': not,
  };

}

class TaskListRelationFilter implements runtime.JsonSerializable {
    const TaskListRelationFilter(
{
    this.every,
    this.some,
    this.none,
}
 );


    final TaskWhereInput? every;
  final TaskWhereInput? some;
  final TaskWhereInput? none;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'every': every,'some': some,'none': none,
  };

}

class TaskOrderByRelationAggregateInput implements runtime.JsonSerializable {
    const TaskOrderByRelationAggregateInput(
{
    this.$count,
}
 );


    final SortOrder? $count;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    '_count': $count,
  };

}

class UserCountOrderByAggregateInput implements runtime.JsonSerializable {
    const UserCountOrderByAggregateInput(
{
    this.id,
    this.username,
    this.email,
    this.password,
}
 );


    final SortOrder? id;
  final SortOrder? username;
  final SortOrder? email;
  final SortOrder? password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,
  };

}

class UserAvgOrderByAggregateInput implements runtime.JsonSerializable {
    const UserAvgOrderByAggregateInput(
{
    this.id,
}
 );


    final SortOrder? id;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,
  };

}

class UserMaxOrderByAggregateInput implements runtime.JsonSerializable {
    const UserMaxOrderByAggregateInput(
{
    this.id,
    this.username,
    this.email,
    this.password,
}
 );


    final SortOrder? id;
  final SortOrder? username;
  final SortOrder? email;
  final SortOrder? password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,
  };

}

class UserMinOrderByAggregateInput implements runtime.JsonSerializable {
    const UserMinOrderByAggregateInput(
{
    this.id,
    this.username,
    this.email,
    this.password,
}
 );


    final SortOrder? id;
  final SortOrder? username;
  final SortOrder? email;
  final SortOrder? password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,
  };

}

class UserSumOrderByAggregateInput implements runtime.JsonSerializable {
    const UserSumOrderByAggregateInput(
{
    this.id,
}
 );


    final SortOrder? id;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,
  };

}

class IntWithAggregatesFilter implements runtime.JsonSerializable {
    const IntWithAggregatesFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
}
 );


    final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedFloatFilter? $avg;
  final NestedIntFilter? $sum;
  final NestedIntFilter? $min;
  final NestedIntFilter? $max;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'not': not,'_count': $count,'_avg': $avg,'_sum': $sum,'_min': $min,'_max': $max,
  };

}

class StringWithAggregatesFilter implements runtime.JsonSerializable {
    const StringWithAggregatesFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
}
 );


    final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedStringFilter? $min;
  final NestedStringFilter? $max;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'contains': contains,'startsWith': startsWith,'endsWith': endsWith,'not': not,'_count': $count,'_min': $min,'_max': $max,
  };

}

class BoolFilter implements runtime.JsonSerializable {
    const BoolFilter(
{
    this.equals,
    this.not,
}
 );


    final bool? equals;
  final runtime.PrismaUnion<bool, NestedBoolFilter>? not;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'not': not,
  };

}

class DateTimeFilter implements runtime.JsonSerializable {
    const DateTimeFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
}
 );


    final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeFilter>? not;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'not': not,
  };

}

class UserRelationFilter implements runtime.JsonSerializable {
    const UserRelationFilter(
{
    this.is$,
    this.isNot,
}
 );


    final UserWhereInput? is$;
  final UserWhereInput? isNot;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'is': is$,'isNot': isNot,
  };

}

class TaskCountOrderByAggregateInput implements runtime.JsonSerializable {
    const TaskCountOrderByAggregateInput(
{
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.userId,
}
 );


    final SortOrder? id;
  final SortOrder? title;
  final SortOrder? description;
  final SortOrder? completed;
  final SortOrder? createdAt;
  final SortOrder? updatedAt;
  final SortOrder? userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,
  };

}

class TaskAvgOrderByAggregateInput implements runtime.JsonSerializable {
    const TaskAvgOrderByAggregateInput(
{
    this.id,
    this.userId,
}
 );


    final SortOrder? id;
  final SortOrder? userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'userId': userId,
  };

}

class TaskMaxOrderByAggregateInput implements runtime.JsonSerializable {
    const TaskMaxOrderByAggregateInput(
{
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.userId,
}
 );


    final SortOrder? id;
  final SortOrder? title;
  final SortOrder? description;
  final SortOrder? completed;
  final SortOrder? createdAt;
  final SortOrder? updatedAt;
  final SortOrder? userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,
  };

}

class TaskMinOrderByAggregateInput implements runtime.JsonSerializable {
    const TaskMinOrderByAggregateInput(
{
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.userId,
}
 );


    final SortOrder? id;
  final SortOrder? title;
  final SortOrder? description;
  final SortOrder? completed;
  final SortOrder? createdAt;
  final SortOrder? updatedAt;
  final SortOrder? userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,
  };

}

class TaskSumOrderByAggregateInput implements runtime.JsonSerializable {
    const TaskSumOrderByAggregateInput(
{
    this.id,
    this.userId,
}
 );


    final SortOrder? id;
  final SortOrder? userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'userId': userId,
  };

}

class BoolWithAggregatesFilter implements runtime.JsonSerializable {
    const BoolWithAggregatesFilter(
{
    this.equals,
    this.not,
    this.$count,
    this.$min,
    this.$max,
}
 );


    final bool? equals;
  final runtime.PrismaUnion<bool, NestedBoolWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedBoolFilter? $min;
  final NestedBoolFilter? $max;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'not': not,'_count': $count,'_min': $min,'_max': $max,
  };

}

class DateTimeWithAggregatesFilter implements runtime.JsonSerializable {
    const DateTimeWithAggregatesFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
}
 );


    final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedDateTimeFilter? $min;
  final NestedDateTimeFilter? $max;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'not': not,'_count': $count,'_min': $min,'_max': $max,
  };

}

class TaskCreateNestedManyWithoutUserInput implements runtime.JsonSerializable {
    const TaskCreateNestedManyWithoutUserInput(
{
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
}
 );


    final List<TaskCreateWithoutUserInput>? create;
  final List<TaskCreateOrConnectWithoutUserInput>? connectOrCreate;
  final TaskCreateManyUserInputEnvelope? createMany;
  final List<TaskWhereUniqueInput>? connect;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'create': create,'connectOrCreate': connectOrCreate,'createMany': createMany,'connect': connect,
  };

}

class TaskUncheckedCreateNestedManyWithoutUserInput implements runtime.JsonSerializable {
    const TaskUncheckedCreateNestedManyWithoutUserInput(
{
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
}
 );


    final List<TaskCreateWithoutUserInput>? create;
  final List<TaskCreateOrConnectWithoutUserInput>? connectOrCreate;
  final TaskCreateManyUserInputEnvelope? createMany;
  final List<TaskWhereUniqueInput>? connect;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'create': create,'connectOrCreate': connectOrCreate,'createMany': createMany,'connect': connect,
  };

}

class StringFieldUpdateOperationsInput implements runtime.JsonSerializable {
    const StringFieldUpdateOperationsInput(
{
    this.set$,
}
 );


    final String? set$;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'set': set$,
  };

}

class TaskUpdateManyWithoutUserNestedInput implements runtime.JsonSerializable {
    const TaskUpdateManyWithoutUserNestedInput(
{
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
}
 );


    final List<TaskCreateWithoutUserInput>? create;
  final List<TaskCreateOrConnectWithoutUserInput>? connectOrCreate;
  final List<TaskUpsertWithWhereUniqueWithoutUserInput>? upsert;
  final TaskCreateManyUserInputEnvelope? createMany;
  final List<TaskWhereUniqueInput>? set$;
  final List<TaskWhereUniqueInput>? disconnect;
  final List<TaskWhereUniqueInput>? delete;
  final List<TaskWhereUniqueInput>? connect;
  final List<TaskUpdateWithWhereUniqueWithoutUserInput>? update;
  final List<TaskUpdateManyWithWhereWithoutUserInput>? updateMany;
  final List<TaskScalarWhereInput>? deleteMany;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'create': create,'connectOrCreate': connectOrCreate,'upsert': upsert,'createMany': createMany,'set': set$,'disconnect': disconnect,'delete': delete,'connect': connect,'update': update,'updateMany': updateMany,'deleteMany': deleteMany,
  };

}

class IntFieldUpdateOperationsInput implements runtime.JsonSerializable {
    const IntFieldUpdateOperationsInput(
{
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
}
 );


    final int? set$;
  final int? increment;
  final int? decrement;
  final int? multiply;
  final int? divide;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'set': set$,'increment': increment,'decrement': decrement,'multiply': multiply,'divide': divide,
  };

}

class TaskUncheckedUpdateManyWithoutUserNestedInput implements runtime.JsonSerializable {
    const TaskUncheckedUpdateManyWithoutUserNestedInput(
{
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
}
 );


    final List<TaskCreateWithoutUserInput>? create;
  final List<TaskCreateOrConnectWithoutUserInput>? connectOrCreate;
  final List<TaskUpsertWithWhereUniqueWithoutUserInput>? upsert;
  final TaskCreateManyUserInputEnvelope? createMany;
  final List<TaskWhereUniqueInput>? set$;
  final List<TaskWhereUniqueInput>? disconnect;
  final List<TaskWhereUniqueInput>? delete;
  final List<TaskWhereUniqueInput>? connect;
  final List<TaskUpdateWithWhereUniqueWithoutUserInput>? update;
  final List<TaskUpdateManyWithWhereWithoutUserInput>? updateMany;
  final List<TaskScalarWhereInput>? deleteMany;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'create': create,'connectOrCreate': connectOrCreate,'upsert': upsert,'createMany': createMany,'set': set$,'disconnect': disconnect,'delete': delete,'connect': connect,'update': update,'updateMany': updateMany,'deleteMany': deleteMany,
  };

}

class UserCreateNestedOneWithoutTasksInput implements runtime.JsonSerializable {
    const UserCreateNestedOneWithoutTasksInput(
{
    this.create,
    this.connectOrCreate,
    this.connect,
}
 );


    final runtime.PrismaUnion<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>? create;
  final UserCreateOrConnectWithoutTasksInput? connectOrCreate;
  final UserWhereUniqueInput? connect;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'create': create,'connectOrCreate': connectOrCreate,'connect': connect,
  };

}

class BoolFieldUpdateOperationsInput implements runtime.JsonSerializable {
    const BoolFieldUpdateOperationsInput(
{
    this.set$,
}
 );


    final bool? set$;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'set': set$,
  };

}

class DateTimeFieldUpdateOperationsInput implements runtime.JsonSerializable {
    const DateTimeFieldUpdateOperationsInput(
{
    this.set$,
}
 );


    final DateTime? set$;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'set': set$,
  };

}

class UserUpdateOneRequiredWithoutTasksNestedInput implements runtime.JsonSerializable {
    const UserUpdateOneRequiredWithoutTasksNestedInput(
{
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
}
 );


    final runtime.PrismaUnion<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>? create;
  final UserCreateOrConnectWithoutTasksInput? connectOrCreate;
  final UserUpsertWithoutTasksInput? upsert;
  final UserWhereUniqueInput? connect;
  final runtime.PrismaUnion<UserUpdateWithoutTasksInput, UserUncheckedUpdateWithoutTasksInput>? update;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'create': create,'connectOrCreate': connectOrCreate,'upsert': upsert,'connect': connect,'update': update,
  };

}

class NestedIntFilter implements runtime.JsonSerializable {
    const NestedIntFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
}
 );


    final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntFilter>? not;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'not': not,
  };

}

class NestedStringFilter implements runtime.JsonSerializable {
    const NestedStringFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
}
 );


    final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringFilter>? not;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'contains': contains,'startsWith': startsWith,'endsWith': endsWith,'not': not,
  };

}

class NestedIntWithAggregatesFilter implements runtime.JsonSerializable {
    const NestedIntWithAggregatesFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
}
 );


    final int? equals;
  final List<int>? in$;
  final List<int>? notIn;
  final int? lt;
  final int? lte;
  final int? gt;
  final int? gte;
  final runtime.PrismaUnion<int, NestedIntWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedFloatFilter? $avg;
  final NestedIntFilter? $sum;
  final NestedIntFilter? $min;
  final NestedIntFilter? $max;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'not': not,'_count': $count,'_avg': $avg,'_sum': $sum,'_min': $min,'_max': $max,
  };

}

class NestedFloatFilter implements runtime.JsonSerializable {
    const NestedFloatFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
}
 );


    final double? equals;
  final List<double>? in$;
  final List<double>? notIn;
  final double? lt;
  final double? lte;
  final double? gt;
  final double? gte;
  final runtime.PrismaUnion<double, NestedFloatFilter>? not;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'not': not,
  };

}

class NestedStringWithAggregatesFilter implements runtime.JsonSerializable {
    const NestedStringWithAggregatesFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
}
 );


    final String? equals;
  final List<String>? in$;
  final List<String>? notIn;
  final String? lt;
  final String? lte;
  final String? gt;
  final String? gte;
  final String? contains;
  final String? startsWith;
  final String? endsWith;
  final runtime.PrismaUnion<String, NestedStringWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedStringFilter? $min;
  final NestedStringFilter? $max;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'contains': contains,'startsWith': startsWith,'endsWith': endsWith,'not': not,'_count': $count,'_min': $min,'_max': $max,
  };

}

class NestedBoolFilter implements runtime.JsonSerializable {
    const NestedBoolFilter(
{
    this.equals,
    this.not,
}
 );


    final bool? equals;
  final runtime.PrismaUnion<bool, NestedBoolFilter>? not;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'not': not,
  };

}

class NestedDateTimeFilter implements runtime.JsonSerializable {
    const NestedDateTimeFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
}
 );


    final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeFilter>? not;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'not': not,
  };

}

class NestedBoolWithAggregatesFilter implements runtime.JsonSerializable {
    const NestedBoolWithAggregatesFilter(
{
    this.equals,
    this.not,
    this.$count,
    this.$min,
    this.$max,
}
 );


    final bool? equals;
  final runtime.PrismaUnion<bool, NestedBoolWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedBoolFilter? $min;
  final NestedBoolFilter? $max;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'not': not,'_count': $count,'_min': $min,'_max': $max,
  };

}

class NestedDateTimeWithAggregatesFilter implements runtime.JsonSerializable {
    const NestedDateTimeWithAggregatesFilter(
{
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
}
 );


    final DateTime? equals;
  final List<DateTime>? in$;
  final List<DateTime>? notIn;
  final DateTime? lt;
  final DateTime? lte;
  final DateTime? gt;
  final DateTime? gte;
  final runtime.PrismaUnion<DateTime, NestedDateTimeWithAggregatesFilter>? not;
  final NestedIntFilter? $count;
  final NestedDateTimeFilter? $min;
  final NestedDateTimeFilter? $max;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'equals': equals,'in': in$,'notIn': notIn,'lt': lt,'lte': lte,'gt': gt,'gte': gte,'not': not,'_count': $count,'_min': $min,'_max': $max,
  };

}

class TaskCreateWithoutUserInput implements runtime.JsonSerializable {
    const TaskCreateWithoutUserInput(
{
    required this.title,
    required this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
}
 );


    final String title;
  final String description;
  final bool? completed;
  final DateTime? createdAt;
  final DateTime? updatedAt;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,
  };

}

class TaskUncheckedCreateWithoutUserInput implements runtime.JsonSerializable {
    const TaskUncheckedCreateWithoutUserInput(
{
    required this.title, required this.description, this.id,
    this.completed,
    this.createdAt,
    this.updatedAt,
}
 );


    final int? id;
  final String title;
  final String description;
  final bool? completed;
  final DateTime? createdAt;
  final DateTime? updatedAt;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,
  };

}

class TaskCreateOrConnectWithoutUserInput implements runtime.JsonSerializable {
    const TaskCreateOrConnectWithoutUserInput(
{
    required this.where,
    required this.create,
}
 );


    final TaskWhereUniqueInput where;
  final runtime.PrismaUnion<TaskCreateWithoutUserInput, TaskUncheckedCreateWithoutUserInput> create;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'where': where,'create': create,
  };

}

class TaskCreateManyUserInputEnvelope implements runtime.JsonSerializable {
    const TaskCreateManyUserInputEnvelope(
{
    required this.data,
    this.skipDuplicates,
}
 );


    final List<TaskCreateManyUserInput> data;
  final bool? skipDuplicates;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'data': data,'skipDuplicates': skipDuplicates,
  };

}

class TaskUpsertWithWhereUniqueWithoutUserInput implements runtime.JsonSerializable {
    const TaskUpsertWithWhereUniqueWithoutUserInput(
{
    required this.where,
    required this.update,
    required this.create,
}
 );


    final TaskWhereUniqueInput where;
  final runtime.PrismaUnion<TaskUpdateWithoutUserInput, TaskUncheckedUpdateWithoutUserInput> update;
  final runtime.PrismaUnion<TaskCreateWithoutUserInput, TaskUncheckedCreateWithoutUserInput> create;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'where': where,'update': update,'create': create,
  };

}

class TaskUpdateWithWhereUniqueWithoutUserInput implements runtime.JsonSerializable {
    const TaskUpdateWithWhereUniqueWithoutUserInput(
{
    required this.where,
    required this.data,
}
 );


    final TaskWhereUniqueInput where;
  final runtime.PrismaUnion<TaskUpdateWithoutUserInput, TaskUncheckedUpdateWithoutUserInput> data;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'where': where,'data': data,
  };

}

class TaskUpdateManyWithWhereWithoutUserInput implements runtime.JsonSerializable {
    const TaskUpdateManyWithWhereWithoutUserInput(
{
    required this.where,
    required this.data,
}
 );


    final TaskScalarWhereInput where;
  final runtime.PrismaUnion<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutTasksInput> data;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'where': where,'data': data,
  };

}

class TaskScalarWhereInput implements runtime.JsonSerializable {
    const TaskScalarWhereInput(
{
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
    this.userId,
}
 );


    final List<TaskScalarWhereInput>? AND;
  final List<TaskScalarWhereInput>? OR;
  final List<TaskScalarWhereInput>? NOT;
  final runtime.PrismaUnion<IntFilter, int>? id;
  final runtime.PrismaUnion<StringFilter, String>? title;
  final runtime.PrismaUnion<StringFilter, String>? description;
  final runtime.PrismaUnion<BoolFilter, bool>? completed;
  final runtime.PrismaUnion<DateTimeFilter, DateTime>? createdAt;
  final runtime.PrismaUnion<DateTimeFilter, DateTime>? updatedAt;
  final runtime.PrismaUnion<IntFilter, int>? userId;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'AND': AND,'OR': OR,'NOT': NOT,'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,'userId': userId,
  };

}

class UserCreateWithoutTasksInput implements runtime.JsonSerializable {
    const UserCreateWithoutTasksInput(
{
    required this.username,
    required this.email,
    required this.password,
}
 );


    final String username;
  final String email;
  final String password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'username': username,'email': email,'password': password,
  };

}

class UserUncheckedCreateWithoutTasksInput implements runtime.JsonSerializable {
    const UserUncheckedCreateWithoutTasksInput(
{
    required this.username, required this.email, required this.password, this.id,
}
 );


    final int? id;
  final String username;
  final String email;
  final String password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,
  };

}

class UserCreateOrConnectWithoutTasksInput implements runtime.JsonSerializable {
    const UserCreateOrConnectWithoutTasksInput(
{
    required this.where,
    required this.create,
}
 );


    final UserWhereUniqueInput where;
  final runtime.PrismaUnion<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput> create;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'where': where,'create': create,
  };

}

class UserUpsertWithoutTasksInput implements runtime.JsonSerializable {
    const UserUpsertWithoutTasksInput(
{
    required this.update,
    required this.create,
}
 );


    final runtime.PrismaUnion<UserUpdateWithoutTasksInput, UserUncheckedUpdateWithoutTasksInput> update;
  final runtime.PrismaUnion<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput> create;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'update': update,'create': create,
  };

}

class UserUpdateWithoutTasksInput implements runtime.JsonSerializable {
    const UserUpdateWithoutTasksInput(
{
    this.username,
    this.email,
    this.password,
}
 );


    final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? username;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'username': username,'email': email,'password': password,
  };

}

class UserUncheckedUpdateWithoutTasksInput implements runtime.JsonSerializable {
    const UserUncheckedUpdateWithoutTasksInput(
{
    this.id,
    this.username,
    this.email,
    this.password,
}
 );


    final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? username;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? email;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? password;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'username': username,'email': email,'password': password,
  };

}

class TaskCreateManyUserInput implements runtime.JsonSerializable {
    const TaskCreateManyUserInput(
{
    required this.title, required this.description, this.id,
    this.completed,
    this.createdAt,
    this.updatedAt,
}
 );


    final int? id;
  final String title;
  final String description;
  final bool? completed;
  final DateTime? createdAt;
  final DateTime? updatedAt;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,
  };

}

class TaskUpdateWithoutUserInput implements runtime.JsonSerializable {
    const TaskUpdateWithoutUserInput(
{
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
}
 );


    final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? description;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? completed;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? updatedAt;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,
  };

}

class TaskUncheckedUpdateWithoutUserInput implements runtime.JsonSerializable {
    const TaskUncheckedUpdateWithoutUserInput(
{
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
}
 );


    final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? description;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? completed;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? updatedAt;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,
  };

}

class TaskUncheckedUpdateManyWithoutTasksInput implements runtime.JsonSerializable {
    const TaskUncheckedUpdateManyWithoutTasksInput(
{
    this.id,
    this.title,
    this.description,
    this.completed,
    this.createdAt,
    this.updatedAt,
}
 );


    final runtime.PrismaUnion<int, IntFieldUpdateOperationsInput>? id;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? title;
  final runtime.PrismaUnion<String, StringFieldUpdateOperationsInput>? description;
  final runtime.PrismaUnion<bool, BoolFieldUpdateOperationsInput>? completed;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? createdAt;
  final runtime.PrismaUnion<DateTime, DateTimeFieldUpdateOperationsInput>? updatedAt;


    @override
  Map<String, dynamic> toJson() => <String, dynamic> {
    'id': id,'title': title,'description': description,'completed': completed,'createdAt': createdAt,'updatedAt': updatedAt,
  };

}



@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class AggregateUser {
  const AggregateUser({
this.$avg,
this.$sum,
this.$min,
this.$max,
});


  factory AggregateUser.fromJson(Map<String, dynamic> json) => _$AggregateUserFromJson(json);

  @JsonKey(name: '_avg')
final UserAvgAggregateOutputType?
  $avg;

@JsonKey(name: '_sum')
final UserSumAggregateOutputType?
  $sum;

@JsonKey(name: '_min')
final UserMinAggregateOutputType?
  $min;

@JsonKey(name: '_max')
final UserMaxAggregateOutputType?
  $max;



  Map<String, dynamic> toJson() => _$AggregateUserToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class UserGroupByOutputType {
  const UserGroupByOutputType({
required this.id,
required this.username,
required this.email,
required this.password,
this.$avg,
this.$sum,
this.$min,
this.$max,
});


  factory UserGroupByOutputType.fromJson(Map<String, dynamic> json) => _$UserGroupByOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final int
  id;

@JsonKey(name: 'username')
final String
  username;

@JsonKey(name: 'email')
final String
  email;

@JsonKey(name: 'password')
final String
  password;

@JsonKey(name: '_avg')
final UserAvgAggregateOutputType?
  $avg;

@JsonKey(name: '_sum')
final UserSumAggregateOutputType?
  $sum;

@JsonKey(name: '_min')
final UserMinAggregateOutputType?
  $min;

@JsonKey(name: '_max')
final UserMaxAggregateOutputType?
  $max;



  Map<String, dynamic> toJson() => _$UserGroupByOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class AggregateTask {
  const AggregateTask({
this.$avg,
this.$sum,
this.$min,
this.$max,
});


  factory AggregateTask.fromJson(Map<String, dynamic> json) => _$AggregateTaskFromJson(json);

  @JsonKey(name: '_avg')
final TaskAvgAggregateOutputType?
  $avg;

@JsonKey(name: '_sum')
final TaskSumAggregateOutputType?
  $sum;

@JsonKey(name: '_min')
final TaskMinAggregateOutputType?
  $min;

@JsonKey(name: '_max')
final TaskMaxAggregateOutputType?
  $max;



  Map<String, dynamic> toJson() => _$AggregateTaskToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class TaskGroupByOutputType {
  const TaskGroupByOutputType({
required this.id,
required this.title,
required this.description,
required this.completed,
required this.createdAt,
required this.updatedAt,
required this.userId,
this.$avg,
this.$sum,
this.$min,
this.$max,
});


  factory TaskGroupByOutputType.fromJson(Map<String, dynamic> json) => _$TaskGroupByOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final int
  id;

@JsonKey(name: 'title')
final String
  title;

@JsonKey(name: 'description')
final String
  description;

@JsonKey(name: 'completed')
final bool
  completed;

@JsonKey(name: 'createdAt')
final DateTime
  createdAt;

@JsonKey(name: 'updatedAt')
final DateTime
  updatedAt;

@JsonKey(name: 'userId')
final int
  userId;

@JsonKey(name: '_avg')
final TaskAvgAggregateOutputType?
  $avg;

@JsonKey(name: '_sum')
final TaskSumAggregateOutputType?
  $sum;

@JsonKey(name: '_min')
final TaskMinAggregateOutputType?
  $min;

@JsonKey(name: '_max')
final TaskMaxAggregateOutputType?
  $max;



  Map<String, dynamic> toJson() => _$TaskGroupByOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class AffectedRowsOutput {
  const AffectedRowsOutput({
required this.count,
});


  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) => _$AffectedRowsOutputFromJson(json);

  @JsonKey(name: 'count')
final int
  count;



  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class UserCountOutputType {
  const UserCountOutputType({
required this.tasks,
});


  factory UserCountOutputType.fromJson(Map<String, dynamic> json) => _$UserCountOutputTypeFromJson(json);

  @JsonKey(name: 'tasks')
final int
  tasks;



  Map<String, dynamic> toJson() => _$UserCountOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class UserCountAggregateOutputType {
  const UserCountAggregateOutputType({
required this.id,
required this.username,
required this.email,
required this.password,
required this.$all,
});


  factory UserCountAggregateOutputType.fromJson(Map<String, dynamic> json) => _$UserCountAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final int
  id;

@JsonKey(name: 'username')
final int
  username;

@JsonKey(name: 'email')
final int
  email;

@JsonKey(name: 'password')
final int
  password;

@JsonKey(name: '_all')
final int
  $all;



  Map<String, dynamic> toJson() => _$UserCountAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class UserAvgAggregateOutputType {
  const UserAvgAggregateOutputType({
this.id,
});


  factory UserAvgAggregateOutputType.fromJson(Map<String, dynamic> json) => _$UserAvgAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final double?
  id;



  Map<String, dynamic> toJson() => _$UserAvgAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class UserSumAggregateOutputType {
  const UserSumAggregateOutputType({
this.id,
});


  factory UserSumAggregateOutputType.fromJson(Map<String, dynamic> json) => _$UserSumAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final int?
  id;



  Map<String, dynamic> toJson() => _$UserSumAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class UserMinAggregateOutputType {
  const UserMinAggregateOutputType({
this.id,
this.username,
this.email,
this.password,
});


  factory UserMinAggregateOutputType.fromJson(Map<String, dynamic> json) => _$UserMinAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final int?
  id;

@JsonKey(name: 'username')
final String?
  username;

@JsonKey(name: 'email')
final String?
  email;

@JsonKey(name: 'password')
final String?
  password;



  Map<String, dynamic> toJson() => _$UserMinAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class UserMaxAggregateOutputType {
  const UserMaxAggregateOutputType({
this.id,
this.username,
this.email,
this.password,
});


  factory UserMaxAggregateOutputType.fromJson(Map<String, dynamic> json) => _$UserMaxAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final int?
  id;

@JsonKey(name: 'username')
final String?
  username;

@JsonKey(name: 'email')
final String?
  email;

@JsonKey(name: 'password')
final String?
  password;



  Map<String, dynamic> toJson() => _$UserMaxAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class TaskCountAggregateOutputType {
  const TaskCountAggregateOutputType({
required this.id,
required this.title,
required this.description,
required this.completed,
required this.createdAt,
required this.updatedAt,
required this.userId,
required this.$all,
});


  factory TaskCountAggregateOutputType.fromJson(Map<String, dynamic> json) => _$TaskCountAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final int
  id;

@JsonKey(name: 'title')
final int
  title;

@JsonKey(name: 'description')
final int
  description;

@JsonKey(name: 'completed')
final int
  completed;

@JsonKey(name: 'createdAt')
final int
  createdAt;

@JsonKey(name: 'updatedAt')
final int
  updatedAt;

@JsonKey(name: 'userId')
final int
  userId;

@JsonKey(name: '_all')
final int
  $all;



  Map<String, dynamic> toJson() => _$TaskCountAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class TaskAvgAggregateOutputType {
  const TaskAvgAggregateOutputType({
this.id,
this.userId,
});


  factory TaskAvgAggregateOutputType.fromJson(Map<String, dynamic> json) => _$TaskAvgAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final double?
  id;

@JsonKey(name: 'userId')
final double?
  userId;



  Map<String, dynamic> toJson() => _$TaskAvgAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class TaskSumAggregateOutputType {
  const TaskSumAggregateOutputType({
this.id,
this.userId,
});


  factory TaskSumAggregateOutputType.fromJson(Map<String, dynamic> json) => _$TaskSumAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final int?
  id;

@JsonKey(name: 'userId')
final int?
  userId;



  Map<String, dynamic> toJson() => _$TaskSumAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class TaskMinAggregateOutputType {
  const TaskMinAggregateOutputType({
this.id,
this.title,
this.description,
this.completed,
this.createdAt,
this.updatedAt,
this.userId,
});


  factory TaskMinAggregateOutputType.fromJson(Map<String, dynamic> json) => _$TaskMinAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final int?
  id;

@JsonKey(name: 'title')
final String?
  title;

@JsonKey(name: 'description')
final String?
  description;

@JsonKey(name: 'completed')
final bool?
  completed;

@JsonKey(name: 'createdAt')
final DateTime?
  createdAt;

@JsonKey(name: 'updatedAt')
final DateTime?
  updatedAt;

@JsonKey(name: 'userId')
final int?
  userId;



  Map<String, dynamic> toJson() => _$TaskMinAggregateOutputTypeToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class TaskMaxAggregateOutputType {
  const TaskMaxAggregateOutputType({
this.id,
this.title,
this.description,
this.completed,
this.createdAt,
this.updatedAt,
this.userId,
});


  factory TaskMaxAggregateOutputType.fromJson(Map<String, dynamic> json) => _$TaskMaxAggregateOutputTypeFromJson(json);

  @JsonKey(name: 'id')
final int?
  id;

@JsonKey(name: 'title')
final String?
  title;

@JsonKey(name: 'description')
final String?
  description;

@JsonKey(name: 'completed')
final bool?
  completed;

@JsonKey(name: 'createdAt')
final DateTime?
  createdAt;

@JsonKey(name: 'updatedAt')
final DateTime?
  updatedAt;

@JsonKey(name: 'userId')
final int?
  userId;



  Map<String, dynamic> toJson() => _$TaskMaxAggregateOutputTypeToJson(this);
}


@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class User {
  const User({
required this.id,
required this.username,
required this.email,
required this.password,
this.tasks,
});


  factory User.fromJson(Map<String, dynamic> json) => _$UserFromJson(json);

  @JsonKey(name: 'id')
final int
  id;

@JsonKey(name: 'username')
final String
  username;

@JsonKey(name: 'email')
final String
  email;

@JsonKey(name: 'password')
final String
  password;

@JsonKey(name: 'tasks')
final List<Task>?
  tasks;



  Map<String, dynamic> toJson() => _$UserToJson(this);
}

@JsonSerializable(
  createFactory: true,
  createToJson: true,
  explicitToJson: true,
)
class Task {
  const Task({
required this.id,
required this.title,
required this.description,
required this.completed,
required this.createdAt,
required this.updatedAt,
required this.userId,
this.user,
});


  factory Task.fromJson(Map<String, dynamic> json) => _$TaskFromJson(json);

  @JsonKey(name: 'id')
final int
  id;

@JsonKey(name: 'title')
final String
  title;

@JsonKey(name: 'description')
final String
  description;

@JsonKey(name: 'completed')
final bool
  completed;

@JsonKey(name: 'createdAt')
final DateTime
  createdAt;

@JsonKey(name: 'updatedAt')
final DateTime
  updatedAt;

@JsonKey(name: 'userId')
final int
  userId;

@JsonKey(name: 'user')
final User?
  user;



  Map<String, dynamic> toJson() => _$TaskToJson(this);
}




class UserDelegate {
const UserDelegate({
  required runtime.Engine engine,
  runtime.QueryEngineRequestHeaders? headers,
}):
_engine = engine,
_headers = headers;

final runtime.Engine _engine;
final runtime.QueryEngineRequestHeaders? _headers;

Future<User?> findUnique({required UserWhereUniqueInput where,}) async {
  final sdl = runtime.GraphQLField(
    'query',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'findUniqueUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
  isRequired: true,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  if (result.data['findUniqueUser'] == null) {
    return null;
  }

  return User.fromJson(result.data['findUniqueUser'] as Map<String, dynamic>);


}

Future<User?> findFirst({UserWhereInput? where,List<UserOrderByWithRelationInput>? orderBy,UserWhereUniqueInput? cursor,int? take,int? skip,List<UserScalarFieldEnum>? distinct,}) async {
  final sdl = runtime.GraphQLField(
    'query',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'findFirstUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
)
,runtime.GraphQLArg(
  'orderBy',
  orderBy,
)
,runtime.GraphQLArg(
  'cursor',
  cursor,
)
,runtime.GraphQLArg(
  'take',
  take,
)
,runtime.GraphQLArg(
  'skip',
  skip,
)
,runtime.GraphQLArg(
  'distinct',
  distinct,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  if (result.data['findFirstUser'] == null) {
    return null;
  }

  return User.fromJson(result.data['findFirstUser'] as Map<String, dynamic>);


}

Future<List<User>> findMany({UserWhereInput? where,List<UserOrderByWithRelationInput>? orderBy,UserWhereUniqueInput? cursor,int? take,int? skip,List<UserScalarFieldEnum>? distinct,}) async {
  final sdl = runtime.GraphQLField(
    'query',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'findManyUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
)
,runtime.GraphQLArg(
  'orderBy',
  orderBy,
)
,runtime.GraphQLArg(
  'cursor',
  cursor,
)
,runtime.GraphQLArg(
  'take',
  take,
)
,runtime.GraphQLArg(
  'skip',
  skip,
)
,runtime.GraphQLArg(
  'distinct',
  distinct,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return (result.data['findManyUser'] as List<dynamic>)
    .map<User>(
      (dynamic item) => User.fromJson(item as Map<String, dynamic>),
    ).toList();


}

Future<User> create({required runtime.PrismaUnion<UserCreateInput, UserUncheckedCreateInput> data,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'createOneUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'data',
  data,
  isRequired: true,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return User.fromJson(result.data['createOneUser'] as Map<String, dynamic>);


}

Future<AffectedRowsOutput> createMany({required List<UserCreateManyInput> data,bool? skipDuplicates,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'createManyUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'data',
  data,
  isRequired: true,
)
,runtime.GraphQLArg(
  'skipDuplicates',
  skipDuplicates,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return AffectedRowsOutput.fromJson(result.data['createManyUser'] as Map<String, dynamic>);


}

Future<User?> update({required runtime.PrismaUnion<UserUpdateInput, UserUncheckedUpdateInput> data,required UserWhereUniqueInput where,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'updateOneUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'data',
  data,
  isRequired: true,
)
,runtime.GraphQLArg(
  'where',
  where,
  isRequired: true,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  if (result.data['updateOneUser'] == null) {
    return null;
  }

  return User.fromJson(result.data['updateOneUser'] as Map<String, dynamic>);


}

Future<AffectedRowsOutput> updateMany({required runtime.PrismaUnion<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput> data,UserWhereInput? where,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'updateManyUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'data',
  data,
  isRequired: true,
)
,runtime.GraphQLArg(
  'where',
  where,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return AffectedRowsOutput.fromJson(result.data['updateManyUser'] as Map<String, dynamic>);


}

Future<User> upsert({required UserWhereUniqueInput where,required runtime.PrismaUnion<UserCreateInput, UserUncheckedCreateInput> create,required runtime.PrismaUnion<UserUpdateInput, UserUncheckedUpdateInput> update,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'upsertOneUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
  isRequired: true,
)
,runtime.GraphQLArg(
  'create',
  create,
  isRequired: true,
)
,runtime.GraphQLArg(
  'update',
  update,
  isRequired: true,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return User.fromJson(result.data['upsertOneUser'] as Map<String, dynamic>);


}

Future<User?> delete({required UserWhereUniqueInput where,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'deleteOneUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
  isRequired: true,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  if (result.data['deleteOneUser'] == null) {
    return null;
  }

  return User.fromJson(result.data['deleteOneUser'] as Map<String, dynamic>);


}

Future<AffectedRowsOutput> deleteMany({UserWhereInput? where,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'deleteManyUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return AffectedRowsOutput.fromJson(result.data['deleteManyUser'] as Map<String, dynamic>);


}

Future<AggregateUser> aggregate({UserWhereInput? where,List<UserOrderByWithRelationInput>? orderBy,UserWhereUniqueInput? cursor,int? take,int? skip,}) async {
  final sdl = runtime.GraphQLField(
    'query',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'aggregateUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
)
,runtime.GraphQLArg(
  'orderBy',
  orderBy,
)
,runtime.GraphQLArg(
  'cursor',
  cursor,
)
,runtime.GraphQLArg(
  'take',
  take,
)
,runtime.GraphQLArg(
  'skip',
  skip,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return AggregateUser.fromJson(result.data['aggregateUser'] as Map<String, dynamic>);


}

Future<List<UserGroupByOutputType>> groupBy({required List<UserScalarFieldEnum> by, UserWhereInput? where,List<UserOrderByWithAggregationInput>? orderBy,UserScalarWhereWithAggregatesInput? having,int? take,int? skip,}) async {
  final sdl = runtime.GraphQLField(
    'query',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'groupByUser',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
)
,runtime.GraphQLArg(
  'orderBy',
  orderBy,
)
,runtime.GraphQLArg(
  'by',
  by,
  isRequired: true,
)
,runtime.GraphQLArg(
  'having',
  having,
)
,runtime.GraphQLArg(
  'take',
  take,
)
,runtime.GraphQLArg(
  'skip',
  skip,
),

])
,
        fields: runtime.GraphQLFields(
  UserScalarFieldEnum.values.map(
    (UserScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return (result.data['groupByUser'] as List<dynamic>)
    .map<UserGroupByOutputType>(
      (dynamic item) => UserGroupByOutputType.fromJson(item as Map<String, dynamic>),
    ).toList();


}

}
class TaskDelegate {
const TaskDelegate({
  required runtime.Engine engine,
  runtime.QueryEngineRequestHeaders? headers,
}):
_engine = engine,
_headers = headers;

final runtime.Engine _engine;
final runtime.QueryEngineRequestHeaders? _headers;

Future<Task?> findUnique({required TaskWhereUniqueInput where,}) async {
  final sdl = runtime.GraphQLField(
    'query',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'findUniqueTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
  isRequired: true,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  if (result.data['findUniqueTask'] == null) {
    return null;
  }

  return Task.fromJson(result.data['findUniqueTask'] as Map<String, dynamic>);


}

Future<Task?> findFirst({TaskWhereInput? where,List<TaskOrderByWithRelationInput>? orderBy,TaskWhereUniqueInput? cursor,int? take,int? skip,List<TaskScalarFieldEnum>? distinct,}) async {
  final sdl = runtime.GraphQLField(
    'query',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'findFirstTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
)
,runtime.GraphQLArg(
  'orderBy',
  orderBy,
)
,runtime.GraphQLArg(
  'cursor',
  cursor,
)
,runtime.GraphQLArg(
  'take',
  take,
)
,runtime.GraphQLArg(
  'skip',
  skip,
)
,runtime.GraphQLArg(
  'distinct',
  distinct,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  if (result.data['findFirstTask'] == null) {
    return null;
  }

  return Task.fromJson(result.data['findFirstTask'] as Map<String, dynamic>);


}

Future<List<Task>> findMany({TaskWhereInput? where,List<TaskOrderByWithRelationInput>? orderBy,TaskWhereUniqueInput? cursor,int? take,int? skip,List<TaskScalarFieldEnum>? distinct,}) async {
  final sdl = runtime.GraphQLField(
    'query',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'findManyTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
)
,runtime.GraphQLArg(
  'orderBy',
  orderBy,
)
,runtime.GraphQLArg(
  'cursor',
  cursor,
)
,runtime.GraphQLArg(
  'take',
  take,
)
,runtime.GraphQLArg(
  'skip',
  skip,
)
,runtime.GraphQLArg(
  'distinct',
  distinct,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return (result.data['findManyTask'] as List<dynamic>)
    .map<Task>(
      (dynamic item) => Task.fromJson(item as Map<String, dynamic>),
    ).toList();


}

Future<Task> create({required runtime.PrismaUnion<TaskCreateInput, TaskUncheckedCreateInput> data,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'createOneTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'data',
  data,
  isRequired: true,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return Task.fromJson(result.data['createOneTask'] as Map<String, dynamic>);


}

Future<AffectedRowsOutput> createMany({required List<TaskCreateManyInput> data,bool? skipDuplicates,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'createManyTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'data',
  data,
  isRequired: true,
)
,runtime.GraphQLArg(
  'skipDuplicates',
  skipDuplicates,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return AffectedRowsOutput.fromJson(result.data['createManyTask'] as Map<String, dynamic>);


}

Future<Task?> update({required runtime.PrismaUnion<TaskUpdateInput, TaskUncheckedUpdateInput> data,required TaskWhereUniqueInput where,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'updateOneTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'data',
  data,
  isRequired: true,
)
,runtime.GraphQLArg(
  'where',
  where,
  isRequired: true,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  if (result.data['updateOneTask'] == null) {
    return null;
  }

  return Task.fromJson(result.data['updateOneTask'] as Map<String, dynamic>);


}

Future<AffectedRowsOutput> updateMany({required runtime.PrismaUnion<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyInput> data,TaskWhereInput? where,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'updateManyTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'data',
  data,
  isRequired: true,
)
,runtime.GraphQLArg(
  'where',
  where,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return AffectedRowsOutput.fromJson(result.data['updateManyTask'] as Map<String, dynamic>);


}

Future<Task> upsert({required TaskWhereUniqueInput where,required runtime.PrismaUnion<TaskCreateInput, TaskUncheckedCreateInput> create,required runtime.PrismaUnion<TaskUpdateInput, TaskUncheckedUpdateInput> update,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'upsertOneTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
  isRequired: true,
)
,runtime.GraphQLArg(
  'create',
  create,
  isRequired: true,
)
,runtime.GraphQLArg(
  'update',
  update,
  isRequired: true,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return Task.fromJson(result.data['upsertOneTask'] as Map<String, dynamic>);


}

Future<Task?> delete({required TaskWhereUniqueInput where,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'deleteOneTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
  isRequired: true,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  if (result.data['deleteOneTask'] == null) {
    return null;
  }

  return Task.fromJson(result.data['deleteOneTask'] as Map<String, dynamic>);


}

Future<AffectedRowsOutput> deleteMany({TaskWhereInput? where,}) async {
  final sdl = runtime.GraphQLField(
    'mutation',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'deleteManyTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return AffectedRowsOutput.fromJson(result.data['deleteManyTask'] as Map<String, dynamic>);


}

Future<AggregateTask> aggregate({TaskWhereInput? where,List<TaskOrderByWithRelationInput>? orderBy,TaskWhereUniqueInput? cursor,int? take,int? skip,}) async {
  final sdl = runtime.GraphQLField(
    'query',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'aggregateTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
)
,runtime.GraphQLArg(
  'orderBy',
  orderBy,
)
,runtime.GraphQLArg(
  'cursor',
  cursor,
)
,runtime.GraphQLArg(
  'take',
  take,
)
,runtime.GraphQLArg(
  'skip',
  skip,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return AggregateTask.fromJson(result.data['aggregateTask'] as Map<String, dynamic>);


}

Future<List<TaskGroupByOutputType>> groupBy({required List<TaskScalarFieldEnum> by, TaskWhereInput? where,List<TaskOrderByWithAggregationInput>? orderBy,TaskScalarWhereWithAggregatesInput? having,int? take,int? skip,}) async {
  final sdl = runtime.GraphQLField(
    'query',
    fields: runtime.GraphQLFields([
      runtime.GraphQLField(
        'groupByTask',
        args: runtime.GraphQLArgs([
  runtime.GraphQLArg(
  'where',
  where,
)
,runtime.GraphQLArg(
  'orderBy',
  orderBy,
)
,runtime.GraphQLArg(
  'by',
  by,
  isRequired: true,
)
,runtime.GraphQLArg(
  'having',
  having,
)
,runtime.GraphQLArg(
  'take',
  take,
)
,runtime.GraphQLArg(
  'skip',
  skip,
),

])
,
        fields: runtime.GraphQLFields(
  TaskScalarFieldEnum.values.map(
    (TaskScalarFieldEnum element) => runtime.GraphQLField(element.name),
  ).toList(),
)
,
      ),
    ]),
  ).toSdl();

  final result = await _engine.request(
    query: sdl,
    headers: _headers,
  );

  return (result.data['groupByTask'] as List<dynamic>)
    .map<TaskGroupByOutputType>(
      (dynamic item) => TaskGroupByOutputType.fromJson(item as Map<String, dynamic>),
    ).toList();


}

}

/// Prisma schema DMMF json string.
const String _dmmfStr = '{"datamodel":{"models":[{"name":"User","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false}},{"name":"username","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"username","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"password","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"password","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"tasks","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Task","relationName":"UserTasks","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationOnDelete":null,"documentation":null,"additionalProperties":{"name":"tasks","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Task","relationName":"UserTasks","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false,"fieldsMap":null,"documentation":null,"extra":{"name":"User","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"username","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"password","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"tasks","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Task","relationName":"UserTasks","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}},{"name":"Task","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false}},{"name":"title","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"title","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"description","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"description","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}},{"name":"completed","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"Boolean","default":false,"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"completed","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"Boolean","default":false,"isGenerated":false,"isUpdatedAt":false}},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false}},{"name":"updatedAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":true,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"updatedAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":true}},{"name":"userId","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"Int","isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationFromFields":null,"relationToFields":null,"relationOnDelete":null,"relationName":null,"documentation":null,"additionalProperties":{"name":"userId","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"Int","isGenerated":false,"isUpdatedAt":false}},{"name":"user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"UserTasks","relationFromFields":["userId"],"relationToFields":["id"],"isGenerated":false,"isUpdatedAt":false,"dbNames":null,"default":null,"relationOnDelete":null,"documentation":null,"additionalProperties":{"name":"user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"UserTasks","relationFromFields":["userId"],"relationToFields":["id"],"isGenerated":false,"isUpdatedAt":false}}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false,"fieldsMap":null,"documentation":null,"extra":{"name":"Task","dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"title","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"description","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"completed","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"Boolean","default":false,"isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","isGenerated":false,"isUpdatedAt":true},{"name":"userId","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"UserTasks","relationFromFields":["userId"],"relationToFields":["id"],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}}],"enums":[],"types":[]},"schema":{"rootQueryType":null,"rootMutationType":null,"inputObjectTypes":{"model":null,"prisma":[{"name":"UserWhereInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"tasks","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskListRelationFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserOrderByWithRelationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"tasks","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskOrderByRelationAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserWhereUniqueInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserOrderByWithAggregationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCountOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserAvgOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserMaxOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserMinOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserSumOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserScalarWhereWithAggregatesInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"TaskWhereInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"BoolFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"user","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserRelationFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskOrderByWithRelationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"user","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskWhereUniqueInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"TaskOrderByWithAggregationInput","constraints":{"maxNumFields":1,"minNumFields":0},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCountOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskAvgOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskMaxOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskMinOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskSumOrderByAggregateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskScalarWhereWithAggregatesInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"BoolWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"username","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"tasks","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateNestedManyWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"tasks","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskUncheckedCreateNestedManyWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"tasks","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskUpdateManyWithoutUserNestedInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"tasks","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskUncheckedUpdateManyWithoutUserNestedInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserUpdateManyMutationInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedUpdateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"user","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateNestedOneWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskUncheckedCreateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"TaskUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"user","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserUpdateOneRequiredWithoutTasksNestedInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskUncheckedUpdateInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskCreateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"TaskUpdateManyMutationInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskUncheckedUpdateManyInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskListRelationFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"every","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"some","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"none","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskOrderByRelationAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserCountOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserAvgOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserMaxOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserMinOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserSumOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"BoolFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserRelationFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"is","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"isNot","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskCountOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskAvgOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskMaxOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskMinOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskSumOrderByAggregateInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"SortOrder","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"BoolWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"NestedBoolWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskCreateNestedManyWithoutUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskUncheckedCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateOrConnectWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskCreateOrConnectWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateManyUserInputEnvelope","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskUncheckedCreateNestedManyWithoutUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskUncheckedCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateOrConnectWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskCreateOrConnectWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateManyUserInputEnvelope","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"StringFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"TaskUpdateManyWithoutUserNestedInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskUncheckedCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateOrConnectWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskCreateOrConnectWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"upsert","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskUpsertWithWhereUniqueWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskUpsertWithWhereUniqueWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateManyUserInputEnvelope","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"disconnect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"delete","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskUpdateWithWhereUniqueWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskUpdateWithWhereUniqueWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updateMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskUpdateManyWithWhereWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskUpdateManyWithWhereWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"deleteMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"IntFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"increment","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"decrement","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"multiply","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"divide","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"TaskUncheckedUpdateManyWithoutUserNestedInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskUncheckedCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateOrConnectWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskCreateOrConnectWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"upsert","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskUpsertWithWhereUniqueWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskUpsertWithWhereUniqueWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskCreateManyUserInputEnvelope","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"disconnect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"delete","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskUpdateWithWhereUniqueWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskUpdateWithWhereUniqueWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updateMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskUpdateManyWithWhereWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskUpdateManyWithWhereWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"deleteMany","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateNestedOneWithoutTasksInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCreateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCreateOrConnectWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"BoolFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"DateTimeFieldUpdateOperationsInput","constraints":{"maxNumFields":1,"minNumFields":1},"fields":[{"name":"set","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserUpdateOneRequiredWithoutTasksNestedInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"create","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCreateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connectOrCreate","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserCreateOrConnectWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"upsert","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserUpsertWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"connect","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserUpdateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedIntFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedStringFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedIntWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"NestedIntWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_avg","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_sum","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedFloatFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Float","location":"scalar","namespace":null},{"isList":false,"type":"NestedFloatFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedStringWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"contains","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"startsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"endsWith","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"NestedStringWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedStringFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedBoolFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedDateTimeFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedBoolWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"NestedBoolWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedBoolFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"NestedDateTimeWithAggregatesFilter","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"equals","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"in","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"notIn","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"lte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"gte","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"not","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"NestedDateTimeWithAggregatesFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_count","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedIntFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_min","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"_max","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"NestedDateTimeFilter","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskCreateWithoutUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"TaskUncheckedCreateWithoutUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"TaskCreateOrConnectWithoutUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskCreateManyUserInputEnvelope","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"TaskCreateManyUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"skipDuplicates","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"TaskUpsertWithWhereUniqueWithoutUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskUpdateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedUpdateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedCreateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskUpdateWithWhereUniqueWithoutUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskUpdateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedUpdateWithoutUserInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskUpdateManyWithWhereWithoutUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskUpdateManyMutationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedUpdateManyWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskScalarWhereInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"AND","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"OR","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"NOT","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":true,"type":"TaskScalarWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"StringFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"BoolFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTimeFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"userId","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"IntFilter","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateWithoutTasksInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"username","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedCreateWithoutTasksInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"UserCreateOrConnectWithoutTasksInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUpsertWithoutTasksInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"update","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateWithoutTasksInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUpdateWithoutTasksInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"UserUncheckedUpdateWithoutTasksInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"username","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"email","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"password","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskCreateManyUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null}],"deprecation":null}],"fieldMap":null},{"name":"TaskUpdateWithoutUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskUncheckedUpdateWithoutUserInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null},{"name":"TaskUncheckedUpdateManyWithoutTasksInput","constraints":{"maxNumFields":null,"minNumFields":null},"fields":[{"name":"id","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null},{"isList":false,"type":"IntFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"title","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"description","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null},{"isList":false,"type":"StringFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"completed","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null},{"isList":false,"type":"BoolFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"createdAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"updatedAt","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"DateTime","location":"scalar","namespace":null},{"isList":false,"type":"DateTimeFieldUpdateOperationsInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"fieldMap":null}]},"outputObjectTypes":{"model":[{"name":"User","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"username","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"password","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"tasks","isNullable":true,"outputType":{"isList":true,"type":"Task","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"_count","isNullable":false,"outputType":{"isList":false,"type":"UserCountOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"Task","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"title","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"description","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"completed","isNullable":false,"outputType":{"isList":false,"type":"Boolean","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"updatedAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"userId","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"user","isNullable":false,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null}],"prisma":[{"name":"Query","fields":[{"name":"findFirstUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findManyUser","isNullable":false,"outputType":{"isList":true,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"aggregateUser","isNullable":false,"outputType":{"isList":false,"type":"AggregateUser","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"groupByUser","isNullable":false,"outputType":{"isList":true,"type":"UserGroupByOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"UserOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"by","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"},{"isList":false,"type":"UserScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"having","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findUniqueUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findFirstTask","isNullable":true,"outputType":{"isList":false,"type":"Task","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findManyTask","isNullable":false,"outputType":{"isList":true,"type":"Task","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"distinct","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"aggregateTask","isNullable":false,"outputType":{"isList":false,"type":"AggregateTask","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskOrderByWithRelationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"cursor","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"groupByTask","isNullable":false,"outputType":{"isList":true,"type":"TaskGroupByOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"orderBy","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":true,"type":"TaskOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskOrderByWithAggregationInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"by","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"TaskScalarFieldEnum","location":"enumTypes","namespace":"prisma"},{"isList":false,"type":"TaskScalarFieldEnum","location":"enumTypes","namespace":"prisma"}],"deprecation":null},{"name":"having","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskScalarWhereWithAggregatesInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"take","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null},{"name":"skip","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Int","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"findUniqueTask","isNullable":true,"outputType":{"isList":false,"type":"Task","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"Mutation","fields":[{"name":"createOneUser","isNullable":false,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"upsertOneUser","isNullable":false,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"createManyUser","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"UserCreateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"skipDuplicates","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteOneUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateOneUser","isNullable":true,"outputType":{"isList":false,"type":"User","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateManyUser","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"UserUpdateManyMutationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"UserUncheckedUpdateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteManyUser","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"UserWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"createOneTask","isNullable":false,"outputType":{"isList":false,"type":"Task","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"upsertOneTask","isNullable":false,"outputType":{"isList":false,"type":"Task","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"create","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskCreateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedCreateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"update","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"createManyTask","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":true,"type":"TaskCreateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"skipDuplicates","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Boolean","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteOneTask","isNullable":true,"outputType":{"isList":false,"type":"Task","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateOneTask","isNullable":true,"outputType":{"isList":false,"type":"Task","location":"outputObjectTypes","namespace":"model"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskUpdateInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedUpdateInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskWhereUniqueInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"updateManyTask","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"data","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"TaskUpdateManyMutationInput","location":"inputObjectTypes","namespace":"prisma"},{"isList":false,"type":"TaskUncheckedUpdateManyInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null},{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"deleteManyTask","isNullable":false,"outputType":{"isList":false,"type":"AffectedRowsOutput","location":"outputObjectTypes","namespace":"prisma"},"args":[{"name":"where","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"TaskWhereInput","location":"inputObjectTypes","namespace":"prisma"}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"executeRaw","isNullable":false,"outputType":{"isList":false,"type":"Json","location":"scalar","namespace":null},"args":[{"name":"query","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"parameters","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Json","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null},{"name":"queryRaw","isNullable":false,"outputType":{"isList":false,"type":"Json","location":"scalar","namespace":null},"args":[{"name":"query","comment":null,"isNullable":false,"isRequired":true,"inputTypes":[{"isList":false,"type":"String","location":"scalar","namespace":null}],"deprecation":null},{"name":"parameters","comment":null,"isNullable":false,"isRequired":false,"inputTypes":[{"isList":false,"type":"Json","location":"scalar","namespace":null}],"deprecation":null}],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"AggregateUser","fields":[{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"UserCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"UserAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"UserSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"UserMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"UserMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserGroupByOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"username","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"password","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"UserCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"UserAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"UserSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"UserMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"UserMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"AggregateTask","fields":[{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"TaskCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"TaskAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"TaskSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"TaskMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"TaskMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"TaskGroupByOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"title","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"description","isNullable":false,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"completed","isNullable":false,"outputType":{"isList":false,"type":"Boolean","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"updatedAt","isNullable":false,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"userId","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_count","isNullable":true,"outputType":{"isList":false,"type":"TaskCountAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_avg","isNullable":true,"outputType":{"isList":false,"type":"TaskAvgAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_sum","isNullable":true,"outputType":{"isList":false,"type":"TaskSumAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_min","isNullable":true,"outputType":{"isList":false,"type":"TaskMinAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null},{"name":"_max","isNullable":true,"outputType":{"isList":false,"type":"TaskMaxAggregateOutputType","location":"outputObjectTypes","namespace":"prisma"},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"AffectedRowsOutput","fields":[{"name":"count","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserCountOutputType","fields":[{"name":"tasks","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserCountAggregateOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"username","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"password","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_all","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserAvgAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Float","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserSumAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserMinAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"username","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"password","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"UserMaxAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"username","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"email","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"password","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"TaskCountAggregateOutputType","fields":[{"name":"id","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"title","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"description","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"completed","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"updatedAt","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"userId","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"_all","isNullable":false,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"TaskAvgAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Float","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"userId","isNullable":true,"outputType":{"isList":false,"type":"Float","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"TaskSumAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"userId","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"TaskMinAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"title","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"description","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"completed","isNullable":true,"outputType":{"isList":false,"type":"Boolean","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"updatedAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"userId","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null},{"name":"TaskMaxAggregateOutputType","fields":[{"name":"id","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"title","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"description","isNullable":true,"outputType":{"isList":false,"type":"String","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"completed","isNullable":true,"outputType":{"isList":false,"type":"Boolean","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"createdAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"updatedAt","isNullable":true,"outputType":{"isList":false,"type":"DateTime","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null},{"name":"userId","isNullable":true,"outputType":{"isList":false,"type":"Int","location":"scalar","namespace":null},"args":[],"deprecation":null,"documentation":null}],"fieldMap":null}]},"enumTypes":{"model":null,"prisma":[{"name":"SortOrder","values":["asc","desc"]},{"name":"TaskScalarFieldEnum","values":["id","title","description","completed","createdAt","updatedAt","userId"]},{"name":"TransactionIsolationLevel","values":["ReadUncommitted","ReadCommitted","RepeatableRead","Serializable"]},{"name":"UserScalarFieldEnum","values":["id","username","email","password"]}]}},"mappings":{"modelOperations":[{"model":"User","findUnique":"findUniqueUser","findFirst":"findFirstUser","findMany":"findManyUser","create":"createOneUser","createMany":"createManyUser","update":"updateOneUser","updateMany":"updateManyUser","upsert":"upsertOneUser","delete":"deleteOneUser","deleteMany":"deleteManyUser","aggregate":"aggregateUser","groupBy":"groupByUser","findRaw":null,"aggregateRaw":null},{"model":"Task","findUnique":"findUniqueTask","findFirst":"findFirstTask","findMany":"findManyTask","create":"createOneTask","createMany":"createManyTask","update":"updateOneTask","updateMany":"updateManyTask","upsert":"upsertOneTask","delete":"deleteOneTask","deleteMany":"deleteManyTask","aggregate":"aggregateTask","groupBy":"groupByTask","findRaw":null,"aggregateRaw":null}],"otherOperations":{"read":[],"write":["executeRaw","queryRaw"]}}}';

/// Prisma schema DMMF.
final dmmf.Document _dmmf = dmmf.Document.fromJson(convert.json.decode(_dmmfStr) as Map<String, dynamic>);

/// Prisma query engine executable.
const String _executable = 'C:UserskylejDesktop\noelsonchallTasks\backend\tasks.dart_toolprismaquery-engine';

/// Prisma schema as string.
const String _schema = '// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider        = "prisma-client-dart"\n  previewFeatures = ["interactiveTransactions"]\n}\n\ndatasource db {\n  provider = "mysql"\n  url      = "mysql://noel:12345678@localhost:3306/tasks_db"\n}\n\nmodel User {\n  id       Int    @id @default(autoincrement())\n  username String\n  email    String @unique\n  password String\n  tasks    Task[] @relation("UserTasks")\n}\n\nmodel Task {\n  id          Int      @id @default(autoincrement())\n  title       String\n  description String\n  completed   Boolean  @default(false)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  userId      Int\n  user        User     @relation("UserTasks", fields: [userId], references: [id])\n}\n';

class Datasources {



    const Datasources({
    this.db
  });
  final runtime.Datasource? db;


  Map<String, runtime.Datasource> toOverwrites() => <String, runtime.Datasource>{
        if (db != null)
        'db': db!,
    
};

}


/// Prisma client.
class PrismaClient {

  const PrismaClient._(this._engine, this._headers);

  factory PrismaClient({
    Datasources? datasources,
  }) {

    final runtime.Engine engine = runtime.BinaryEngine(
      datasources: datasources?.toOverwrites() ?? const <String, runtime.Datasource> {},
      dmmf: _dmmf,
      schema: _schema,
      environment: configure.environment.all,
      executable: _executable,
    );

    return PrismaClient._(engine, null);
  }
  final runtime.Engine _engine;
  final runtime.QueryEngineRequestHeaders? _headers;

  /// Connect client to database.
  Future<void> $connect() => _engine.start();

  /// Disconnect client from database.
  Future<void> $disconnect() => _engine.stop();

  /// Start transaction.
  /// 
  /// Example:
  /// ```dart
  /// final User user = await prisma.$transaction((PrismaClient prisma) async {
  ///   final User user = await prisma.user.create(...);
  ///   final Post post = await prisma.post.create(...);
  /// 
  ///   return user;
  /// });
  /// ```
  Future<T> $transaction<T>(Future<T> Function(PrismaClient) handler) async {
    // If current client is already in transaction, use it.
    if (_headers?.transactionId != null) return handler(this);

    // Create transcation common headers.
    const headers = runtime.TransactionHeaders();

    // Request transaction info, Start transaction.
    final info = await _engine.startTransaction(
      headers: headers,
    );

    // Create new client with transaction headers.
    final transactionClient = PrismaClient._(
      _engine,
      runtime.QueryEngineRequestHeaders(transactionId: info.id),
    );

    try {
      return handler(transactionClient).then<T>((T value) async {
        await _engine.commitTransaction(
          headers: headers,
          info: info,
        );

        return value;
      });
    } catch (e) {
      await _engine.rollbackTransaction(
        headers: headers,
        info: info,
      );
      rethrow;
    }
  }

  /// User model delegate.
UserDelegate get user => UserDelegate(
  engine: _engine,
  headers: _headers,
);


/// Task model delegate.
TaskDelegate get task => TaskDelegate(
  engine: _engine,
  headers: _headers,
);



}

